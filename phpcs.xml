<?xml version="1.0"?>
<ruleset name="Custom Standard" namespace="MyProject\CS\Standard">

    <!--
       The name attribute of the ruleset tag is displayed
       when running PHP_CodeSniffer with the -v command line
       argument.
       If you have custom sniffs, and they use a namespace prefix
       that is different to the name of the directory containing
       your ruleset.xml file, you can set the namespace prefix using
       the namespace attribute of the ruleset tag.
       For example, if your namespace format for sniffs is
       MyProject\CS\Standard\Sniffs\Category, set the namespace to
       MyProject\CS\Standard (everything up to \Sniffs\)
    -->

    <!--
       The content of the description tag is not displayed anywhere
       except in this file, so it can contain information for
       developers who may change this file in the future.
    -->
    <description>A custom coding standard</description>

    <!--
        If no files or directories are specified on the command line
        your custom standard can specify what files should be checked
        instead.
        Note that file and directory paths specified in a ruleset are
        relative to the ruleset's location, and that specifying any file or
        directory path on the command line will ignore all file tags.
     -->
    <file>src</file>
    <file>test</file>

    <!--
       You can hard-code ignore patterns directly into your
       custom standard so you don't have to specify the
       patterns on the command line.
       The following two tags are equivalent to the command line argument:
       -ignore=*/tests/*,*/data/*
    -->

    <!--
       You can hard-code command line values into your custom standard.
       Note that this does not work for the command line values:
       -v[v][v], -l, -d, -sniffs and -standard
       The following tags are equivalent to the command line arguments:
       -report=summary -colors -sp
    -->
    <arg name="report" value="code"/>
    <arg name="extensions" value="php,dev,release"/>
    <arg name="colors"/>
    <arg name="cache"/>
    <arg value="spn"/>


    <rule ref="PSR12" />

    <!--
        just allow short array syntax
    -->
    <rule ref="Generic.Arrays.DisallowLongArraySyntax" />
</ruleset>